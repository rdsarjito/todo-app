{"version":3,"sources":["components/Navbar/Navbar.js","components/Footer/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","className","Footer","App","useState","todos","setTodos","userInput","setUseInput","todoIndex","setTodoIndex","editText","setEditText","editing","setEditing","ref","useRef","addTodoHandler","useCallback","oldTodos","newTodo","id","Math","floor","random","text","newTodos","concat","deleteTodoHandler","filter","todo","editTodoHandler","index","saveEditTodoHandler","map","useEffect","current","focus","length","type","value","onChange","e","target","onClick","style","color","fontWeight","defaultValue","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.56dd096f.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Navbar = () => {\n  return (\n    <div className=\"navbar\">\n      <h1>\n        Todo App\n      </h1>\n    </div>\n  );\n};\n\nexport default Navbar;\n","import React from 'react'\n\nconst Footer = () => {\n    return (\n        <div className=\"footer\">\n            <p>Todo App by RamaDN &copy;</p>\n        </div>\n    )\n}\n\nexport default Footer\n","import React, { useState, useEffect, useRef, useCallback } from \"react\";\nimport \"./App.css\";\nimport Navbar from \"./components/Navbar/Navbar\";\nimport Footer from \"./components/Footer/Footer\";\nimport { MdEdit, MdDelete } from \"react-icons/md\";\nconst App = () => {\n  const [todos, setTodos] = useState([]);\n  const [userInput, setUseInput] = useState(\"\");\n  const [todoIndex, setTodoIndex] = useState(null);\n  const [editText, setEditText] = useState(\"\");\n  const [editing, setEditing] = useState(false);\n  const ref = useRef(null);\n\n  const addTodoHandler = useCallback(() => {\n    const oldTodos = [...todos];\n\n    if (userInput === \"\") {\n      return;\n    } else {\n      const newTodo = {\n        id: Math.floor(Math.random() * 1000),\n        text: userInput,\n      };\n\n      const newTodos = oldTodos.concat(newTodo);\n\n      setTodos(newTodos);\n    }\n\n    setUseInput(\"\");\n  }, [todos, userInput]);\n\n  const deleteTodoHandler = useCallback(\n    (id) => {\n      const oldTodos = [...todos];\n      const newTodos = oldTodos.filter((todo) => todo.id !== id);\n\n      setTodos(newTodos);\n    },\n    [todos]\n  );\n\n  const editTodoHandler = useCallback((index) => {\n    setTodoIndex(index);\n    setEditing(true);\n  }, []);\n\n  const saveEditTodoHandler = useCallback(\n    (id) => {\n      setEditing(false);\n      setTodoIndex(null);\n\n      const oldTodos = [...todos];\n\n      const newTodos = oldTodos.map((todo) => {\n        if (todo.id === id) {\n          if (editText !== \"\") {\n            todo.text = editText;\n          } else {\n            return todo;\n          }\n        }\n        return todo;\n      });\n\n      setTodos(newTodos);\n    },\n    [editText, todos]\n  );\n\n  useEffect(() => {\n    ref.current.focus();\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <Navbar />\n      <div className=\"container\">\n        <span className=\"total\">Total todos: {todos.length}</span>\n        <div className=\"input-container\">\n          <input\n            type=\"text\"\n            value={userInput}\n            onChange={(e) => setUseInput(e.target.value)}\n            ref={ref}\n          />\n          <button onClick={addTodoHandler}>Add</button>\n        </div>\n        {todos.length === 0 && (\n          <h2 style={{ color: \"#f9564f\", fontWeight: \"bold\" }}>\n            Add Data Terlebih Dahulu...\n          </h2>\n        )}\n\n        <div className=\"todos-container-parent\">\n          {todos.map((todo, index) => (\n            <div key={todo.id} className=\"todos-container-child\">\n              {editing && todoIndex === index ? (\n                <div>\n                  <input\n                    type=\"text\"\n                    defaultValue={todo.text}\n                    onChange={(e) => setEditText(e.target.value)}\n                  />\n                  <button onClick={() => saveEditTodoHandler(todo.id)}>\n                    Save\n                  </button>\n                </div>\n              ) : (\n                <>\n                  <div>\n                    <h4 className=\"todo-text\">{todo.text}</h4>\n                  </div>\n                  <div>\n                    <MdDelete\n                      className=\"icon\"\n                      onClick={() => deleteTodoHandler(todo.id)}\n                    />\n                    <MdEdit\n                      className=\"icon\"\n                      onClick={() => editTodoHandler(index)}\n                    />\n                  </div>\n                </>\n              )}\n            </div>\n          ))}\n        </div>\n      </div>\n      <Footer />\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}